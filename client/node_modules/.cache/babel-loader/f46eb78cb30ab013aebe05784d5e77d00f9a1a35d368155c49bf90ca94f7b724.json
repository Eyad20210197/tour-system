{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\source\\\\repos\\\\Tour System Web Application\\\\client\\\\src\\\\pages\\\\private\\\\tourist\\\\Complaints.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../../../context/AuthContext\";\nimport * as signalR from \"@microsoft/signalr\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Complaints() {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [complaints, setComplaints] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [connection, setConnection] = useState(null);\n\n  // 1. Fetch initial complaints\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:5055/api/complaints?userId=${user.id}`).then(res => res.json()).then(data => setComplaints(data)).catch(err => console.error(\"Error fetching complaints:\", err));\n    }\n  }, [user]);\n\n  // 2. Setup SignalR connection\n  useEffect(() => {\n    if (!user) return;\n    const newConnection = new signalR.HubConnectionBuilder().withUrl(\"http://localhost:5055/complainthub\").withAutomaticReconnect().build();\n    newConnection.start().then(() => {\n      console.log(\"SignalR Connected\");\n      newConnection.on(\"ReceiveComplaintUpdate\", updatedComplaint => {\n        setComplaints(prev => prev.map(c => c.id === updatedComplaint.id ? updatedComplaint : c));\n      });\n    }).catch(err => console.error(\"SignalR Connection Error:\", err));\n    setConnection(newConnection);\n    return () => {\n      if (newConnection) {\n        newConnection.stop();\n      }\n    };\n  }, [user]);\n\n  // 3. Handle new complaint submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newComplaint = {\n      userId: user.id,\n      username: user.username,\n      message: text,\n      status: \"pending\",\n      response: \"\"\n    };\n    fetch(\"http://localhost:5055/api/complaints\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newComplaint)\n    }).then(res => res.json()).then(() => {\n      setText(\"\");\n    }).catch(err => console.error(\"Error submitting complaint:\", err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Submit a Complaint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"Cardd\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Write your complaint here...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Complaints\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"Grid\",\n      children: complaints.map(c => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 28\n          }, this), \" \", c.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 28\n          }, this), \" \", c.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), c.response && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Admin Response:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 43\n          }, this), \" \", c.response]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 40\n        }, this)]\n      }, c.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(Complaints, \"i32VkufqFwhe7vrLjUf3J+ITAPU=\");\n_c = Complaints;\nexport default Complaints;\nvar _c;\n$RefreshReg$(_c, \"Complaints\");","map":{"version":3,"names":["useContext","useEffect","useState","AuthContext","signalR","jsxDEV","_jsxDEV","Complaints","_s","user","complaints","setComplaints","text","setText","connection","setConnection","fetch","id","then","res","json","data","catch","err","console","error","newConnection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","start","log","on","updatedComplaint","prev","map","c","stop","handleSubmit","e","preventDefault","newComplaint","userId","username","message","status","response","method","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","type","_c","$RefreshReg$"],"sources":["C:/Users/DELL/source/repos/Tour System Web Application/client/src/pages/private/tourist/Complaints.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport * as signalR from \"@microsoft/signalr\";\r\n\r\nfunction Complaints() {\r\n    const { user } = useContext(AuthContext);\r\n    const [complaints, setComplaints] = useState([]);\r\n    const [text, setText] = useState(\"\");\r\n    const [connection, setConnection] = useState(null);\r\n\r\n    // 1. Fetch initial complaints\r\n    useEffect(() => {\r\n        if (user) {\r\n            fetch(`http://localhost:5055/api/complaints?userId=${user.id}`)\r\n                .then(res => res.json())\r\n                .then(data => setComplaints(data))\r\n                .catch(err => console.error(\"Error fetching complaints:\", err));\r\n        }\r\n    }, [user]);\r\n\r\n    // 2. Setup SignalR connection\r\n    useEffect(() => {\r\n        if (!user) return;\r\n\r\n        const newConnection = new signalR.HubConnectionBuilder()\r\n            .withUrl(\"http://localhost:5055/complainthub\")\r\n            .withAutomaticReconnect()\r\n            .build();\r\n\r\n        newConnection.start()\r\n            .then(() => {\r\n                console.log(\"SignalR Connected\");\r\n                newConnection.on(\"ReceiveComplaintUpdate\", (updatedComplaint) => {\r\n                    setComplaints(prev =>\r\n                        prev.map(c =>\r\n                            c.id === updatedComplaint.id ? updatedComplaint : c\r\n                        )\r\n                    );\r\n                });\r\n            })\r\n            .catch(err => console.error(\"SignalR Connection Error:\", err));\r\n\r\n        setConnection(newConnection);\r\n\r\n        return () => {\r\n            if (newConnection) {\r\n                newConnection.stop();\r\n            }\r\n        };\r\n    }, [user]);\r\n\r\n    // 3. Handle new complaint submission\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newComplaint = {\r\n            userId: user.id,\r\n            username: user.username,\r\n            message: text,\r\n            status: \"pending\",\r\n            response: \"\"\r\n        };\r\n\r\n        fetch(\"http://localhost:5055/api/complaints\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(newComplaint),\r\n        })\r\n            .then(res => res.json())\r\n            .then(() => {\r\n                setText(\"\");\r\n            })\r\n            .catch(err => console.error(\"Error submitting complaint:\", err));\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <h1>Submit a Complaint</h1>\r\n            <form onSubmit={handleSubmit} className=\"Cardd\">\r\n                <textarea\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                    placeholder=\"Write your complaint here...\"\r\n                    required\r\n                />\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n\r\n            <h2>Your Complaints</h2>\r\n            <ul className=\"Grid\">\r\n                {complaints.map((c) => (\r\n                    <li key={c.id}>\r\n                        <p><strong>Message:</strong> {c.message}</p>\r\n                        <p><strong>Status:</strong> {c.status}</p>\r\n                        {c.response && <p><strong>Admin Response:</strong> {c.response}</p>}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Complaints;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}