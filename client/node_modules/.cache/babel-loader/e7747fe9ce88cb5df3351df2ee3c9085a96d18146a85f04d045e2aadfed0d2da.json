{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\source\\\\repos\\\\Tour System Web Application\\\\client\\\\src\\\\pages\\\\private\\\\admin\\\\ManageComplaints.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport * as signalR from \"@microsoft/signalr\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManageComplaints() {\n  _s();\n  const [complaints, setComplaints] = useState([]);\n  const [hubConnection, setHubConnection] = useState(null);\n  useEffect(() => {\n    // Fetch complaints on initial load\n    fetch(\"http://localhost:5055/api/complaints\").then(res => res.json()).then(data => setComplaints(data)).catch(err => console.error(\"Error fetching complaints:\", err));\n\n    // Setup SignalR connection\n    const connection = new signalR.HubConnectionBuilder().withUrl(\"http://localhost:5055/complainthub\").withAutomaticReconnect().build();\n    connection.start().then(() => {\n      console.log(\"SignalR connected (Admin)\");\n      setHubConnection(connection);\n      connection.on(\"ReceiveComplaint\", newComplaint => {\n        setComplaints(prev => [...prev, newComplaint]);\n      });\n    }).catch(err => console.error(\"SignalR connection error:\", err));\n  }, []);\n  const handleResponse = (id, responseText) => {\n    fetch(`http://localhost:5055/api/complaints/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        response: responseText,\n        status: \"resolved\"\n      })\n    }).then(() => {\n      setComplaints(prev => prev.map(c => c.id === id ? {\n        ...c,\n        response: responseText,\n        status: \"resolved\"\n      } : c));\n    }).catch(err => console.error(\"Error responding to complaint:\", err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Complaints\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), complaints.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No complaints found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"Grid\",\n      children: complaints.map(c => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"User ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 32\n          }, this), \" \", c.userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Complaint:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 32\n          }, this), \" \", c.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 32\n          }, this), \" \", c.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), c.response ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Response:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 36\n          }, this), \" \", c.response]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            const response = e.target.response.value;\n            handleResponse(c.id, response);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"response\",\n            placeholder: \"Write your response...\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send Response\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }, this)]\n      }, c.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(ManageComplaints, \"EKmM7qHBjONNeP1dfPKUD7mYOrw=\");\n_c = ManageComplaints;\nexport default ManageComplaints;\nvar _c;\n$RefreshReg$(_c, \"ManageComplaints\");","map":{"version":3,"names":["useEffect","useState","signalR","jsxDEV","_jsxDEV","ManageComplaints","_s","complaints","setComplaints","hubConnection","setHubConnection","fetch","then","res","json","data","catch","err","console","error","connection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","start","log","on","newComplaint","prev","handleResponse","id","responseText","method","headers","body","JSON","stringify","response","status","map","c","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","userId","message","onSubmit","e","preventDefault","target","value","name","placeholder","required","type","_c","$RefreshReg$"],"sources":["C:/Users/DELL/source/repos/Tour System Web Application/client/src/pages/private/admin/ManageComplaints.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport * as signalR from \"@microsoft/signalr\";\r\n\r\nfunction ManageComplaints() {\r\n    const [complaints, setComplaints] = useState([]);\r\n    const [hubConnection, setHubConnection] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch complaints on initial load\r\n        fetch(\"http://localhost:5055/api/complaints\")\r\n            .then(res => res.json())\r\n            .then(data => setComplaints(data))\r\n            .catch(err => console.error(\"Error fetching complaints:\", err));\r\n\r\n        // Setup SignalR connection\r\n        const connection = new signalR.HubConnectionBuilder()\r\n            .withUrl(\"http://localhost:5055/complainthub\")\r\n            .withAutomaticReconnect()\r\n            .build();\r\n\r\n        connection.start()\r\n            .then(() => {\r\n                console.log(\"SignalR connected (Admin)\");\r\n                setHubConnection(connection);\r\n\r\n                connection.on(\"ReceiveComplaint\", (newComplaint) => {\r\n                    setComplaints(prev => [...prev, newComplaint]);\r\n                });\r\n            })\r\n            .catch(err => console.error(\"SignalR connection error:\", err));\r\n    }, []);\r\n\r\n    const handleResponse = (id, responseText) => {\r\n        fetch(`http://localhost:5055/api/complaints/${id}`, {\r\n            method: \"PATCH\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                response: responseText,\r\n                status: \"resolved\",\r\n            }),\r\n        })\r\n            .then(() => {\r\n                setComplaints(prev =>\r\n                    prev.map(c =>\r\n                        c.id === id ? { ...c, response: responseText, status: \"resolved\" } : c\r\n                    )\r\n                );\r\n            })\r\n            .catch(err => console.error(\"Error responding to complaint:\", err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <h1>Manage Complaints</h1>\r\n\r\n            {complaints.length === 0 ? (\r\n                <p>No complaints found.</p>\r\n            ) : (\r\n                <ul className=\"Grid\">\r\n                    {complaints.map((c) => (\r\n                        <li key={c.id}>\r\n                            <p><strong>User ID:</strong> {c.userId}</p>\r\n                            <p><strong>Complaint:</strong> {c.message}</p>\r\n                            <p><strong>Status:</strong> {c.status}</p>\r\n\r\n                            {c.response ? (\r\n                                <p><strong>Response:</strong> {c.response}</p>\r\n                            ) : (\r\n                                <form\r\n                                    onSubmit={(e) => {\r\n                                        e.preventDefault();\r\n                                        const response = e.target.response.value;\r\n                                        handleResponse(c.id, response);\r\n                                    }}\r\n                                >\r\n                                    <textarea name=\"response\" placeholder=\"Write your response...\" required />\r\n                                    <button type=\"submit\">Send Response</button>\r\n                                </form>\r\n                            )}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManageComplaints;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}