{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\source\\\\repos\\\\Tour System Web Application\\\\client\\\\src\\\\pages\\\\public\\\\ChatAssistant.jsx\",\n  _s = $RefreshSig$();\n// src/components/AiAssistant.jsx\nimport { useState } from \"react\";\nimport \"./styles/ChatAssistant.css\"; // We'll style it separately\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatAssistant() {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const toggleChat = () => setOpen(prev => !prev);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const newMessages = [...messages, {\n      from: \"user\",\n      text: input\n    }];\n    setMessages(newMessages);\n    setInput(\"\");\n    try {\n      const res = await fetch(\"http://localhost:11434/api/generate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          model: \"gemma:2b\",\n          prompt: input,\n          stream: false\n        })\n      });\n      const data = await res.json();\n      const aiReply = data.response || \"Sorry, I didn�t understand.\";\n      setMessages([...newMessages, {\n        from: \"ai\",\n        text: aiReply\n      }]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-float\",\n      onClick: toggleChat,\n      children: \"chatAi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Tour Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleChat,\n          children: \"\\uFFFD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.from,\n          children: msg.text\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Ask me anything...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatAssistant, \"x/qz9qu6kuYx20K8fuhk9KK+0q0=\");\n_c = ChatAssistant;\nexport default ChatAssistant;\nvar _c;\n$RefreshReg$(_c, \"ChatAssistant\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatAssistant","_s","open","setOpen","messages","setMessages","input","setInput","toggleChat","prev","sendMessage","trim","newMessages","from","text","res","fetch","method","headers","body","JSON","stringify","model","prompt","stream","data","json","aiReply","response","err","console","error","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/DELL/source/repos/Tour System Web Application/client/src/pages/public/ChatAssistant.jsx"],"sourcesContent":["// src/components/AiAssistant.jsx\r\nimport { useState } from \"react\";\r\nimport \"./styles/ChatAssistant.css\"; // We'll style it separately\r\n\r\nfunction ChatAssistant() {\r\n    const [open, setOpen] = useState(false);\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const toggleChat = () => setOpen(prev => !prev);\r\n\r\n    const sendMessage = async () => {\r\n        if (!input.trim()) return;\r\n\r\n        const newMessages = [...messages, { from: \"user\", text: input }];\r\n        setMessages(newMessages);\r\n        setInput(\"\");\r\n\r\n        try {\r\n            const res = await fetch(\"http://localhost:11434/api/generate\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    model: \"gemma:2b\",\r\n                    prompt: input,\r\n                    stream: false\r\n                })\r\n            });\r\n            const data = await res.json();\r\n            const aiReply = data.response || \"Sorry, I didn�t understand.\";\r\n\r\n            setMessages([...newMessages, { from: \"ai\", text: aiReply }]);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* Floating button */}\r\n            <div className=\"chat-float\" onClick={toggleChat}>chatAi</div>\r\n\r\n            {/* Chat box */}\r\n            {open && (\r\n                <div className=\"chat-box\">\r\n                    <div className=\"chat-header\">\r\n                        <strong>Tour Assistant</strong>\r\n                        <button onClick={toggleChat}>�</button>\r\n                    </div>\r\n                    <div className=\"chat-messages\">\r\n                        {messages.map((msg, i) => (\r\n                            <div key={i} className={msg.from}>\r\n                                {msg.text}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"chat-input\">\r\n                        <input\r\n                            value={input}\r\n                            onChange={(e) => setInput(e.target.value)}\r\n                            placeholder=\"Ask me anything...\"\r\n                        />\r\n                        <button onClick={sendMessage}>Send</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ChatAssistant;\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,4BAA4B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,UAAU,GAAGA,CAAA,KAAML,OAAO,CAACM,IAAI,IAAI,CAACA,IAAI,CAAC;EAE/C,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAACJ,KAAK,CAACK,IAAI,CAAC,CAAC,EAAE;IAEnB,MAAMC,WAAW,GAAG,CAAC,GAAGR,QAAQ,EAAE;MAAES,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAER;IAAM,CAAC,CAAC;IAChED,WAAW,CAACO,WAAW,CAAC;IACxBL,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACA,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,KAAK,EAAE,UAAU;UACjBC,MAAM,EAAEjB,KAAK;UACbkB,MAAM,EAAE;QACZ,CAAC;MACL,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,CAAC;MAC7B,MAAMC,OAAO,GAAGF,IAAI,CAACG,QAAQ,IAAI,6BAA6B;MAE9DvB,WAAW,CAAC,CAAC,GAAGO,WAAW,EAAE;QAAEC,IAAI,EAAE,IAAI;QAAEC,IAAI,EAAEa;MAAQ,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC,OAAOE,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACtB;EACJ,CAAC;EAED,oBACIhC,OAAA,CAAAE,SAAA;IAAAiC,QAAA,gBAEInC,OAAA;MAAKoC,SAAS,EAAC,YAAY;MAACC,OAAO,EAAE1B,UAAW;MAAAwB,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAG5DpC,IAAI,iBACDL,OAAA;MAAKoC,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACrBnC,OAAA;QAAKoC,SAAS,EAAC,aAAa;QAAAD,QAAA,gBACxBnC,OAAA;UAAAmC,QAAA,EAAQ;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/BzC,OAAA;UAAQqC,OAAO,EAAE1B,UAAW;UAAAwB,QAAA,EAAC;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACNzC,OAAA;QAAKoC,SAAS,EAAC,eAAe;QAAAD,QAAA,EACzB5B,QAAQ,CAACmC,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBACjB5C,OAAA;UAAaoC,SAAS,EAAEO,GAAG,CAAC3B,IAAK;UAAAmB,QAAA,EAC5BQ,GAAG,CAAC1B;QAAI,GADH2B,CAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEN,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNzC,OAAA;QAAKoC,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACvBnC,OAAA;UACI6C,KAAK,EAAEpC,KAAM;UACbqC,QAAQ,EAAGC,CAAC,IAAKrC,QAAQ,CAACqC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC1CI,WAAW,EAAC;QAAoB;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,eACFzC,OAAA;UAAQqC,OAAO,EAAExB,WAAY;UAAAsB,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA,eACH,CAAC;AAEX;AAACrC,EAAA,CAhEQD,aAAa;AAAA+C,EAAA,GAAb/C,aAAa;AAkEtB,eAAeA,aAAa;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}