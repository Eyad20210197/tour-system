{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eyad\\\\source\\\\repos\\\\Tour System Web Application\\\\client\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\n\n// Create authentication context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Load user from localStorage when the app starts\n  useEffect(() => {\n    const savedUser = localStorage.getItem(\"user\");\n    if (savedUser) setUser(JSON.parse(savedUser)); //from string to object \n    setLoading(false);\n  }, []);\n  // Login function\n  const login = async (username, password) => {\n    try {\n      const response = await fetch(\"http://localhost:5500/users\");\n      const users = await response.json();\n      const foundUser = users.find(user => user.username === username && user.password === password);\n      if (foundUser) {\n        setUser(foundUser);\n        localStorage.setItem(\"user\", JSON.stringify(foundUser)); //from object to string\n        return {\n          success: true,\n          role: foundUser.role\n        };\n      } else {\n        return {\n          success: false,\n          message: \"Invalid username or password\"\n        };\n      }\n    } catch (error) {\n      console.error(\"Login Error:\", error);\n      return {\n        success: false,\n        message: \"Server error\"\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"user\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","login","username","password","response","fetch","users","json","foundUser","find","setItem","stringify","success","role","message","error","console","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/eyad/source/repos/Tour System Web Application/client/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\n\r\n// Create authentication context\r\nexport const AuthContext = createContext();\r\n \r\nconst AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // Load user from localStorage when the app starts\r\n    useEffect(() => {\r\n        const savedUser = localStorage.getItem(\"user\");\r\n        if (savedUser) setUser(JSON.parse(savedUser));//from string to object \r\n        setLoading(false);\r\n    }, []); \r\n    // Login function\r\n    const login = async (username, password) => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5500/users\");\r\n            const users = await response.json();\r\n            const foundUser = users.find(user => user.username === username && user.password === password);\r\n\r\n            if (foundUser) {\r\n                setUser(foundUser);\r\n                localStorage.setItem(\"user\", JSON.stringify(foundUser));//from object to string\r\n                return { success: true, role: foundUser.role };\r\n            } else {\r\n                return { success: false, message: \"Invalid username or password\" };\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Login Error:\", error);\r\n            return { success: false, message: \"Server error\" };\r\n        }\r\n    };\r\n\r\n    // Logout function\r\n    const logout = () => {\r\n        setUser(null);\r\n        localStorage.removeItem(\"user\");\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, logout, loading }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE1D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAIF,SAAS,EAAEH,OAAO,CAACM,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC,CAAC;IAC9CD,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EACN;EACA,MAAMM,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACxC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAC3D,MAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACnC,MAAMC,SAAS,GAAGF,KAAK,CAACG,IAAI,CAACjB,IAAI,IAAIA,IAAI,CAACU,QAAQ,KAAKA,QAAQ,IAAIV,IAAI,CAACW,QAAQ,KAAKA,QAAQ,CAAC;MAE9F,IAAIK,SAAS,EAAE;QACXf,OAAO,CAACe,SAAS,CAAC;QAClBX,YAAY,CAACa,OAAO,CAAC,MAAM,EAAEX,IAAI,CAACY,SAAS,CAACH,SAAS,CAAC,CAAC,CAAC;QACxD,OAAO;UAAEI,OAAO,EAAE,IAAI;UAAEC,IAAI,EAAEL,SAAS,CAACK;QAAK,CAAC;MAClD,CAAC,MAAM;QACH,OAAO;UAAED,OAAO,EAAE,KAAK;UAAEE,OAAO,EAAE;QAA+B,CAAC;MACtE;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO;QAAEH,OAAO,EAAE,KAAK;QAAEE,OAAO,EAAE;MAAe,CAAC;IACtD;EACJ,CAAC;;EAED;EACA,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACjBxB,OAAO,CAAC,IAAI,CAAC;IACbI,YAAY,CAACqB,UAAU,CAAC,MAAM,CAAC;EACnC,CAAC;EAED,oBACI/B,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAE5B,IAAI;MAAES,KAAK;MAAEgB,MAAM;MAAEvB;IAAQ,CAAE;IAAAJ,QAAA,EACzDA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACjC,EAAA,CAzCIF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AA2ClB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}